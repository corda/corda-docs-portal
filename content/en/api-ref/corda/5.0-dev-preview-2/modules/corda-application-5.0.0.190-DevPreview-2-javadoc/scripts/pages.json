[{"name":"abstract fun <R : Any> receive(receiveType: Class<R>): R","description":"net.corda.v5.application.messaging.FlowSession.receive","location":"application/net.corda.v5.application.messaging/-flow-session/receive.html","searchKeys":["receive","abstract fun <R : Any> receive(receiveType: Class<R>): R","net.corda.v5.application.messaging.FlowSession.receive"]},{"name":"abstract fun <R : Any> sendAndReceive(receiveType: Class<R>, payload: Any): R","description":"net.corda.v5.application.messaging.FlowSession.sendAndReceive","location":"application/net.corda.v5.application.messaging/-flow-session/send-and-receive.html","searchKeys":["sendAndReceive","abstract fun <R : Any> sendAndReceive(receiveType: Class<R>, payload: Any): R","net.corda.v5.application.messaging.FlowSession.sendAndReceive"]},{"name":"abstract fun <R> subFlow(subFlow: SubFlow<R>): R","description":"net.corda.v5.application.flows.FlowEngine.subFlow","location":"application/net.corda.v5.application.flows/-flow-engine/sub-flow.html","searchKeys":["subFlow","abstract fun <R> subFlow(subFlow: SubFlow<R>): R","net.corda.v5.application.flows.FlowEngine.subFlow"]},{"name":"abstract fun <T : Any> deserialize(bytes: ByteArray, clazz: Class<T>): T","description":"net.corda.v5.application.serialization.SerializationService.deserialize","location":"application/net.corda.v5.application.serialization/-serialization-service/deserialize.html","searchKeys":["deserialize","abstract fun <T : Any> deserialize(bytes: ByteArray, clazz: Class<T>): T","net.corda.v5.application.serialization.SerializationService.deserialize"]},{"name":"abstract fun <T : Any> deserialize(serializedBytes: SerializedBytes<T>, clazz: Class<T>): T","description":"net.corda.v5.application.serialization.SerializationService.deserialize","location":"application/net.corda.v5.application.serialization/-serialization-service/deserialize.html","searchKeys":["deserialize","abstract fun <T : Any> deserialize(serializedBytes: SerializedBytes<T>, clazz: Class<T>): T","net.corda.v5.application.serialization.SerializationService.deserialize"]},{"name":"abstract fun <T : Any> find(entityClass: Class<T>, primaryKey: Any): T?","description":"net.corda.v5.application.persistence.PersistenceService.find","location":"application/net.corda.v5.application.persistence/-persistence-service/find.html","searchKeys":["find","abstract fun <T : Any> find(entityClass: Class<T>, primaryKey: Any): T?","net.corda.v5.application.persistence.PersistenceService.find"]},{"name":"abstract fun <T : Any> find(entityClass: Class<T>, primaryKeys: List<Any>): List<T>","description":"net.corda.v5.application.persistence.PersistenceService.find","location":"application/net.corda.v5.application.persistence/-persistence-service/find.html","searchKeys":["find","abstract fun <T : Any> find(entityClass: Class<T>, primaryKeys: List<Any>): List<T>","net.corda.v5.application.persistence.PersistenceService.find"]},{"name":"abstract fun <T : Any> findAll(entityClass: Class<T>): PagedQuery<T>","description":"net.corda.v5.application.persistence.PersistenceService.findAll","location":"application/net.corda.v5.application.persistence/-persistence-service/find-all.html","searchKeys":["findAll","abstract fun <T : Any> findAll(entityClass: Class<T>): PagedQuery<T>","net.corda.v5.application.persistence.PersistenceService.findAll"]},{"name":"abstract fun <T : Any> merge(entities: List<T>): List<T>","description":"net.corda.v5.application.persistence.PersistenceService.merge","location":"application/net.corda.v5.application.persistence/-persistence-service/merge.html","searchKeys":["merge","abstract fun <T : Any> merge(entities: List<T>): List<T>","net.corda.v5.application.persistence.PersistenceService.merge"]},{"name":"abstract fun <T : Any> merge(entity: T): T?","description":"net.corda.v5.application.persistence.PersistenceService.merge","location":"application/net.corda.v5.application.persistence/-persistence-service/merge.html","searchKeys":["merge","abstract fun <T : Any> merge(entity: T): T?","net.corda.v5.application.persistence.PersistenceService.merge"]},{"name":"abstract fun <T : Any> query(queryName: String, entityClass: Class<T>): ParameterisedQuery<T>","description":"net.corda.v5.application.persistence.PersistenceService.query","location":"application/net.corda.v5.application.persistence/-persistence-service/query.html","searchKeys":["query","abstract fun <T : Any> query(queryName: String, entityClass: Class<T>): ParameterisedQuery<T>","net.corda.v5.application.persistence.PersistenceService.query"]},{"name":"abstract fun <T : Any> serialize(obj: T): SerializedBytes<T>","description":"net.corda.v5.application.serialization.SerializationService.serialize","location":"application/net.corda.v5.application.serialization/-serialization-service/serialize.html","searchKeys":["serialize","abstract fun <T : Any> serialize(obj: T): SerializedBytes<T>","net.corda.v5.application.serialization.SerializationService.serialize"]},{"name":"abstract fun <T> getRequestBodyAs(marshallingService: MarshallingService, clazz: Class<T>): T","description":"net.corda.v5.application.flows.RPCRequestData.getRequestBodyAs","location":"application/net.corda.v5.application.flows/-r-p-c-request-data/get-request-body-as.html","searchKeys":["getRequestBodyAs","abstract fun <T> getRequestBodyAs(marshallingService: MarshallingService, clazz: Class<T>): T","net.corda.v5.application.flows.RPCRequestData.getRequestBodyAs"]},{"name":"abstract fun <T> getRequestBodyAsList(marshallingService: MarshallingService, clazz: Class<T>): List<T>","description":"net.corda.v5.application.flows.RPCRequestData.getRequestBodyAsList","location":"application/net.corda.v5.application.flows/-r-p-c-request-data/get-request-body-as-list.html","searchKeys":["getRequestBodyAsList","abstract fun <T> getRequestBodyAsList(marshallingService: MarshallingService, clazz: Class<T>): List<T>","net.corda.v5.application.flows.RPCRequestData.getRequestBodyAsList"]},{"name":"abstract fun <T> parse(input: String, clazz: Class<T>): T","description":"net.corda.v5.application.marshalling.MarshallingService.parse","location":"application/net.corda.v5.application.marshalling/-marshalling-service/parse.html","searchKeys":["parse","abstract fun <T> parse(input: String, clazz: Class<T>): T","net.corda.v5.application.marshalling.MarshallingService.parse"]},{"name":"abstract fun <T> parseList(input: String, clazz: Class<T>): List<T>","description":"net.corda.v5.application.marshalling.MarshallingService.parseList","location":"application/net.corda.v5.application.marshalling/-marshalling-service/parse-list.html","searchKeys":["parseList","abstract fun <T> parseList(input: String, clazz: Class<T>): List<T>","net.corda.v5.application.marshalling.MarshallingService.parseList"]},{"name":"abstract fun apply(flowContextProperties: FlowContextProperties)","description":"net.corda.v5.application.messaging.FlowContextPropertiesBuilder.apply","location":"application/net.corda.v5.application.messaging/-flow-context-properties-builder/apply.html","searchKeys":["apply","abstract fun apply(flowContextProperties: FlowContextProperties)","net.corda.v5.application.messaging.FlowContextPropertiesBuilder.apply"]},{"name":"abstract fun call(): T","description":"net.corda.v5.application.flows.SubFlow.call","location":"application/net.corda.v5.application.flows/-sub-flow/call.html","searchKeys":["call","abstract fun call(): T","net.corda.v5.application.flows.SubFlow.call"]},{"name":"abstract fun call(requestBody: RPCRequestData): String","description":"net.corda.v5.application.flows.RPCStartableFlow.call","location":"application/net.corda.v5.application.flows/-r-p-c-startable-flow/call.html","searchKeys":["call","abstract fun call(requestBody: RPCRequestData): String","net.corda.v5.application.flows.RPCStartableFlow.call"]},{"name":"abstract fun call(session: FlowSession)","description":"net.corda.v5.application.flows.ResponderFlow.call","location":"application/net.corda.v5.application.flows/-responder-flow/call.html","searchKeys":["call","abstract fun call(session: FlowSession)","net.corda.v5.application.flows.ResponderFlow.call"]},{"name":"abstract fun close()","description":"net.corda.v5.application.messaging.FlowSession.close","location":"application/net.corda.v5.application.messaging/-flow-session/close.html","searchKeys":["close","abstract fun close()","net.corda.v5.application.messaging.FlowSession.close"]},{"name":"abstract fun decodePublicKey(encodedKey: String): PublicKey","description":"net.corda.v5.application.crypto.SigningService.decodePublicKey","location":"application/net.corda.v5.application.crypto/-signing-service/decode-public-key.html","searchKeys":["decodePublicKey","abstract fun decodePublicKey(encodedKey: String): PublicKey","net.corda.v5.application.crypto.SigningService.decodePublicKey"]},{"name":"abstract fun execute(): List<R>","description":"net.corda.v5.application.persistence.PagedQuery.execute","location":"application/net.corda.v5.application.persistence/-paged-query/execute.html","searchKeys":["execute","abstract fun execute(): List<R>","net.corda.v5.application.persistence.PagedQuery.execute"]},{"name":"abstract fun format(data: Any): String","description":"net.corda.v5.application.marshalling.MarshallingService.format","location":"application/net.corda.v5.application.marshalling/-marshalling-service/format.html","searchKeys":["format","abstract fun format(data: Any): String","net.corda.v5.application.marshalling.MarshallingService.format"]},{"name":"abstract fun getRequestBody(): String","description":"net.corda.v5.application.flows.RPCRequestData.getRequestBody","location":"application/net.corda.v5.application.flows/-r-p-c-request-data/get-request-body.html","searchKeys":["getRequestBody","abstract fun getRequestBody(): String","net.corda.v5.application.flows.RPCRequestData.getRequestBody"]},{"name":"abstract fun initiateFlow(x500Name: MemberX500Name): FlowSession","description":"net.corda.v5.application.messaging.FlowMessaging.initiateFlow","location":"application/net.corda.v5.application.messaging/-flow-messaging/initiate-flow.html","searchKeys":["initiateFlow","abstract fun initiateFlow(x500Name: MemberX500Name): FlowSession","net.corda.v5.application.messaging.FlowMessaging.initiateFlow"]},{"name":"abstract fun initiateFlow(x500Name: MemberX500Name, flowContextPropertiesBuilder: FlowContextPropertiesBuilder): FlowSession","description":"net.corda.v5.application.messaging.FlowMessaging.initiateFlow","location":"application/net.corda.v5.application.messaging/-flow-messaging/initiate-flow.html","searchKeys":["initiateFlow","abstract fun initiateFlow(x500Name: MemberX500Name, flowContextPropertiesBuilder: FlowContextPropertiesBuilder): FlowSession","net.corda.v5.application.messaging.FlowMessaging.initiateFlow"]},{"name":"abstract fun lookup(): List<MemberInfo>","description":"net.corda.v5.application.membership.MemberLookup.lookup","location":"application/net.corda.v5.application.membership/-member-lookup/lookup.html","searchKeys":["lookup","abstract fun lookup(): List<MemberInfo>","net.corda.v5.application.membership.MemberLookup.lookup"]},{"name":"abstract fun lookup(key: PublicKey): MemberInfo?","description":"net.corda.v5.application.membership.MemberLookup.lookup","location":"application/net.corda.v5.application.membership/-member-lookup/lookup.html","searchKeys":["lookup","abstract fun lookup(key: PublicKey): MemberInfo?","net.corda.v5.application.membership.MemberLookup.lookup"]},{"name":"abstract fun lookup(name: MemberX500Name): MemberInfo?","description":"net.corda.v5.application.membership.MemberLookup.lookup","location":"application/net.corda.v5.application.membership/-member-lookup/lookup.html","searchKeys":["lookup","abstract fun lookup(name: MemberX500Name): MemberInfo?","net.corda.v5.application.membership.MemberLookup.lookup"]},{"name":"abstract fun myInfo(): MemberInfo","description":"net.corda.v5.application.membership.MemberLookup.myInfo","location":"application/net.corda.v5.application.membership/-member-lookup/my-info.html","searchKeys":["myInfo","abstract fun myInfo(): MemberInfo","net.corda.v5.application.membership.MemberLookup.myInfo"]},{"name":"abstract fun persist(entities: List<Any>)","description":"net.corda.v5.application.persistence.PersistenceService.persist","location":"application/net.corda.v5.application.persistence/-persistence-service/persist.html","searchKeys":["persist","abstract fun persist(entities: List<Any>)","net.corda.v5.application.persistence.PersistenceService.persist"]},{"name":"abstract fun persist(entity: Any)","description":"net.corda.v5.application.persistence.PersistenceService.persist","location":"application/net.corda.v5.application.persistence/-persistence-service/persist.html","searchKeys":["persist","abstract fun persist(entity: Any)","net.corda.v5.application.persistence.PersistenceService.persist"]},{"name":"abstract fun put(key: String, value: String)","description":"net.corda.v5.application.flows.FlowContextProperties.put","location":"application/net.corda.v5.application.flows/-flow-context-properties/put.html","searchKeys":["put","abstract fun put(key: String, value: String)","net.corda.v5.application.flows.FlowContextProperties.put"]},{"name":"abstract fun remove(entities: List<Any>)","description":"net.corda.v5.application.persistence.PersistenceService.remove","location":"application/net.corda.v5.application.persistence/-persistence-service/remove.html","searchKeys":["remove","abstract fun remove(entities: List<Any>)","net.corda.v5.application.persistence.PersistenceService.remove"]},{"name":"abstract fun remove(entity: Any)","description":"net.corda.v5.application.persistence.PersistenceService.remove","location":"application/net.corda.v5.application.persistence/-persistence-service/remove.html","searchKeys":["remove","abstract fun remove(entity: Any)","net.corda.v5.application.persistence.PersistenceService.remove"]},{"name":"abstract fun send(payload: Any)","description":"net.corda.v5.application.messaging.FlowSession.send","location":"application/net.corda.v5.application.messaging/-flow-session/send.html","searchKeys":["send","abstract fun send(payload: Any)","net.corda.v5.application.messaging.FlowSession.send"]},{"name":"abstract fun setLimit(limit: Int): PagedQuery<R>","description":"net.corda.v5.application.persistence.PagedQuery.setLimit","location":"application/net.corda.v5.application.persistence/-paged-query/set-limit.html","searchKeys":["setLimit","abstract fun setLimit(limit: Int): PagedQuery<R>","net.corda.v5.application.persistence.PagedQuery.setLimit"]},{"name":"abstract fun setOffset(offset: Int): PagedQuery<R>","description":"net.corda.v5.application.persistence.PagedQuery.setOffset","location":"application/net.corda.v5.application.persistence/-paged-query/set-offset.html","searchKeys":["setOffset","abstract fun setOffset(offset: Int): PagedQuery<R>","net.corda.v5.application.persistence.PagedQuery.setOffset"]},{"name":"abstract fun setParameter(name: String, value: Any): ParameterisedQuery<R>","description":"net.corda.v5.application.persistence.ParameterisedQuery.setParameter","location":"application/net.corda.v5.application.persistence/-parameterised-query/set-parameter.html","searchKeys":["setParameter","abstract fun setParameter(name: String, value: Any): ParameterisedQuery<R>","net.corda.v5.application.persistence.ParameterisedQuery.setParameter"]},{"name":"abstract fun setParameters(parameters: Map<String, Any>): ParameterisedQuery<R>","description":"net.corda.v5.application.persistence.ParameterisedQuery.setParameters","location":"application/net.corda.v5.application.persistence/-parameterised-query/set-parameters.html","searchKeys":["setParameters","abstract fun setParameters(parameters: Map<String, Any>): ParameterisedQuery<R>","net.corda.v5.application.persistence.ParameterisedQuery.setParameters"]},{"name":"abstract fun sign(bytes: ByteArray, publicKey: PublicKey, signatureSpec: SignatureSpec): DigitalSignature.WithKey","description":"net.corda.v5.application.crypto.SigningService.sign","location":"application/net.corda.v5.application.crypto/-signing-service/sign.html","searchKeys":["sign","abstract fun sign(bytes: ByteArray, publicKey: PublicKey, signatureSpec: SignatureSpec): DigitalSignature.WithKey","net.corda.v5.application.crypto.SigningService.sign"]},{"name":"abstract fun verify(publicKey: PublicKey, signatureSpec: SignatureSpec, signatureData: ByteArray, clearData: ByteArray)","description":"net.corda.v5.application.crypto.DigitalSignatureVerificationService.verify","location":"application/net.corda.v5.application.crypto/-digital-signature-verification-service/verify.html","searchKeys":["verify","abstract fun verify(publicKey: PublicKey, signatureSpec: SignatureSpec, signatureData: ByteArray, clearData: ByteArray)","net.corda.v5.application.crypto.DigitalSignatureVerificationService.verify"]},{"name":"abstract operator fun get(key: String): String?","description":"net.corda.v5.application.flows.FlowContextProperties.get","location":"application/net.corda.v5.application.flows/-flow-context-properties/get.html","searchKeys":["get","abstract operator fun get(key: String): String?","net.corda.v5.application.flows.FlowContextProperties.get"]},{"name":"abstract override fun setLimit(limit: Int): ParameterisedQuery<R>","description":"net.corda.v5.application.persistence.ParameterisedQuery.setLimit","location":"application/net.corda.v5.application.persistence/-parameterised-query/set-limit.html","searchKeys":["setLimit","abstract override fun setLimit(limit: Int): ParameterisedQuery<R>","net.corda.v5.application.persistence.ParameterisedQuery.setLimit"]},{"name":"abstract override fun setOffset(offset: Int): ParameterisedQuery<R>","description":"net.corda.v5.application.persistence.ParameterisedQuery.setOffset","location":"application/net.corda.v5.application.persistence/-parameterised-query/set-offset.html","searchKeys":["setOffset","abstract override fun setOffset(offset: Int): ParameterisedQuery<R>","net.corda.v5.application.persistence.ParameterisedQuery.setOffset"]},{"name":"abstract val conflictingStates: List<UniquenessCheckStateDetails>","description":"net.corda.v5.application.uniqueness.model.UniquenessCheckErrorInputStateConflict.conflictingStates","location":"application/net.corda.v5.application.uniqueness.model/-uniqueness-check-error-input-state-conflict/conflicting-states.html","searchKeys":["conflictingStates","abstract val conflictingStates: List<UniquenessCheckStateDetails>","net.corda.v5.application.uniqueness.model.UniquenessCheckErrorInputStateConflict.conflictingStates"]},{"name":"abstract val conflictingStates: List<UniquenessCheckStateDetails>","description":"net.corda.v5.application.uniqueness.model.UniquenessCheckErrorReferenceStateConflict.conflictingStates","location":"application/net.corda.v5.application.uniqueness.model/-uniqueness-check-error-reference-state-conflict/conflicting-states.html","searchKeys":["conflictingStates","abstract val conflictingStates: List<UniquenessCheckStateDetails>","net.corda.v5.application.uniqueness.model.UniquenessCheckErrorReferenceStateConflict.conflictingStates"]},{"name":"abstract val consumingTxId: SecureHash?","description":"net.corda.v5.application.uniqueness.model.UniquenessCheckStateDetails.consumingTxId","location":"application/net.corda.v5.application.uniqueness.model/-uniqueness-check-state-details/consuming-tx-id.html","searchKeys":["consumingTxId","abstract val consumingTxId: SecureHash?","net.corda.v5.application.uniqueness.model.UniquenessCheckStateDetails.consumingTxId"]},{"name":"abstract val contextProperties: FlowContextProperties","description":"net.corda.v5.application.messaging.FlowSession.contextProperties","location":"application/net.corda.v5.application.messaging/-flow-session/context-properties.html","searchKeys":["contextProperties","abstract val contextProperties: FlowContextProperties","net.corda.v5.application.messaging.FlowSession.contextProperties"]},{"name":"abstract val counterparty: MemberX500Name","description":"net.corda.v5.application.messaging.FlowSession.counterparty","location":"application/net.corda.v5.application.messaging/-flow-session/counterparty.html","searchKeys":["counterparty","abstract val counterparty: MemberX500Name","net.corda.v5.application.messaging.FlowSession.counterparty"]},{"name":"abstract val error: UniquenessCheckError","description":"net.corda.v5.application.uniqueness.model.UniquenessCheckResultFailure.error","location":"application/net.corda.v5.application.uniqueness.model/-uniqueness-check-result-failure/error.html","searchKeys":["error","abstract val error: UniquenessCheckError","net.corda.v5.application.uniqueness.model.UniquenessCheckResultFailure.error"]},{"name":"abstract val errorText: String","description":"net.corda.v5.application.uniqueness.model.UniquenessCheckErrorGeneral.errorText","location":"application/net.corda.v5.application.uniqueness.model/-uniqueness-check-error-general/error-text.html","searchKeys":["errorText","abstract val errorText: String","net.corda.v5.application.uniqueness.model.UniquenessCheckErrorGeneral.errorText"]},{"name":"abstract val evaluationTimestamp: Instant","description":"net.corda.v5.application.uniqueness.model.UniquenessCheckErrorTimeWindowOutOfBounds.evaluationTimestamp","location":"application/net.corda.v5.application.uniqueness.model/-uniqueness-check-error-time-window-out-of-bounds/evaluation-timestamp.html","searchKeys":["evaluationTimestamp","abstract val evaluationTimestamp: Instant","net.corda.v5.application.uniqueness.model.UniquenessCheckErrorTimeWindowOutOfBounds.evaluationTimestamp"]},{"name":"abstract val flowContextProperties: FlowContextProperties","description":"net.corda.v5.application.flows.FlowEngine.flowContextProperties","location":"application/net.corda.v5.application.flows/-flow-engine/flow-context-properties.html","searchKeys":["flowContextProperties","abstract val flowContextProperties: FlowContextProperties","net.corda.v5.application.flows.FlowEngine.flowContextProperties"]},{"name":"abstract val flowId: UUID","description":"net.corda.v5.application.flows.FlowEngine.flowId","location":"application/net.corda.v5.application.flows/-flow-engine/flow-id.html","searchKeys":["flowId","abstract val flowId: UUID","net.corda.v5.application.flows.FlowEngine.flowId"]},{"name":"abstract val result: UniquenessCheckResult","description":"net.corda.v5.application.uniqueness.model.UniquenessCheckResponse.result","location":"application/net.corda.v5.application.uniqueness.model/-uniqueness-check-response/result.html","searchKeys":["result","abstract val result: UniquenessCheckResult","net.corda.v5.application.uniqueness.model.UniquenessCheckResponse.result"]},{"name":"abstract val resultTimestamp: Instant","description":"net.corda.v5.application.uniqueness.model.UniquenessCheckResult.resultTimestamp","location":"application/net.corda.v5.application.uniqueness.model/-uniqueness-check-result/result-timestamp.html","searchKeys":["resultTimestamp","abstract val resultTimestamp: Instant","net.corda.v5.application.uniqueness.model.UniquenessCheckResult.resultTimestamp"]},{"name":"abstract val signature: DigitalSignatureAndMetadata?","description":"net.corda.v5.application.uniqueness.model.UniquenessCheckResponse.signature","location":"application/net.corda.v5.application.uniqueness.model/-uniqueness-check-response/signature.html","searchKeys":["signature","abstract val signature: DigitalSignatureAndMetadata?","net.corda.v5.application.uniqueness.model.UniquenessCheckResponse.signature"]},{"name":"abstract val stateIndex: Int","description":"net.corda.v5.application.uniqueness.model.UniquenessCheckStateRef.stateIndex","location":"application/net.corda.v5.application.uniqueness.model/-uniqueness-check-state-ref/state-index.html","searchKeys":["stateIndex","abstract val stateIndex: Int","net.corda.v5.application.uniqueness.model.UniquenessCheckStateRef.stateIndex"]},{"name":"abstract val stateRef: UniquenessCheckStateRef","description":"net.corda.v5.application.uniqueness.model.UniquenessCheckStateDetails.stateRef","location":"application/net.corda.v5.application.uniqueness.model/-uniqueness-check-state-details/state-ref.html","searchKeys":["stateRef","abstract val stateRef: UniquenessCheckStateRef","net.corda.v5.application.uniqueness.model.UniquenessCheckStateDetails.stateRef"]},{"name":"abstract val timeWindowLowerBound: Instant?","description":"net.corda.v5.application.uniqueness.model.UniquenessCheckErrorTimeWindowOutOfBounds.timeWindowLowerBound","location":"application/net.corda.v5.application.uniqueness.model/-uniqueness-check-error-time-window-out-of-bounds/time-window-lower-bound.html","searchKeys":["timeWindowLowerBound","abstract val timeWindowLowerBound: Instant?","net.corda.v5.application.uniqueness.model.UniquenessCheckErrorTimeWindowOutOfBounds.timeWindowLowerBound"]},{"name":"abstract val timeWindowUpperBound: Instant","description":"net.corda.v5.application.uniqueness.model.UniquenessCheckErrorTimeWindowOutOfBounds.timeWindowUpperBound","location":"application/net.corda.v5.application.uniqueness.model/-uniqueness-check-error-time-window-out-of-bounds/time-window-upper-bound.html","searchKeys":["timeWindowUpperBound","abstract val timeWindowUpperBound: Instant","net.corda.v5.application.uniqueness.model.UniquenessCheckErrorTimeWindowOutOfBounds.timeWindowUpperBound"]},{"name":"abstract val txHash: SecureHash","description":"net.corda.v5.application.uniqueness.model.UniquenessCheckStateRef.txHash","location":"application/net.corda.v5.application.uniqueness.model/-uniqueness-check-state-ref/tx-hash.html","searchKeys":["txHash","abstract val txHash: SecureHash","net.corda.v5.application.uniqueness.model.UniquenessCheckStateRef.txHash"]},{"name":"abstract val unknownStates: List<UniquenessCheckStateRef>","description":"net.corda.v5.application.uniqueness.model.UniquenessCheckErrorInputStateUnknown.unknownStates","location":"application/net.corda.v5.application.uniqueness.model/-uniqueness-check-error-input-state-unknown/unknown-states.html","searchKeys":["unknownStates","abstract val unknownStates: List<UniquenessCheckStateRef>","net.corda.v5.application.uniqueness.model.UniquenessCheckErrorInputStateUnknown.unknownStates"]},{"name":"abstract val unknownStates: List<UniquenessCheckStateRef>","description":"net.corda.v5.application.uniqueness.model.UniquenessCheckErrorReferenceStateUnknown.unknownStates","location":"application/net.corda.v5.application.uniqueness.model/-uniqueness-check-error-reference-state-unknown/unknown-states.html","searchKeys":["unknownStates","abstract val unknownStates: List<UniquenessCheckStateRef>","net.corda.v5.application.uniqueness.model.UniquenessCheckErrorReferenceStateUnknown.unknownStates"]},{"name":"abstract val virtualNodeName: MemberX500Name","description":"net.corda.v5.application.flows.FlowEngine.virtualNodeName","location":"application/net.corda.v5.application.flows/-flow-engine/virtual-node-name.html","searchKeys":["virtualNodeName","abstract val virtualNodeName: MemberX500Name","net.corda.v5.application.flows.FlowEngine.virtualNodeName"]},{"name":"annotation class CordaInject","description":"net.corda.v5.application.flows.CordaInject","location":"application/net.corda.v5.application.flows/-corda-inject/index.html","searchKeys":["CordaInject","annotation class CordaInject","net.corda.v5.application.flows.CordaInject"]},{"name":"annotation class InitiatedBy(val protocol: String, val version: IntArray = [1])","description":"net.corda.v5.application.flows.InitiatedBy","location":"application/net.corda.v5.application.flows/-initiated-by/index.html","searchKeys":["InitiatedBy","annotation class InitiatedBy(val protocol: String, val version: IntArray = [1])","net.corda.v5.application.flows.InitiatedBy"]},{"name":"annotation class InitiatingFlow(val protocol: String, val version: IntArray = [1])","description":"net.corda.v5.application.flows.InitiatingFlow","location":"application/net.corda.v5.application.flows/-initiating-flow/index.html","searchKeys":["InitiatingFlow","annotation class InitiatingFlow(val protocol: String, val version: IntArray = [1])","net.corda.v5.application.flows.InitiatingFlow"]},{"name":"class CordaPersistenceException(message: String, cause: Throwable?) : CordaRuntimeException","description":"net.corda.v5.application.persistence.CordaPersistenceException","location":"application/net.corda.v5.application.persistence/-corda-persistence-exception/index.html","searchKeys":["CordaPersistenceException","class CordaPersistenceException(message: String, cause: Throwable?) : CordaRuntimeException","net.corda.v5.application.persistence.CordaPersistenceException"]},{"name":"data class DigitalSignatureAndMetadata(val signature: DigitalSignature.WithKey, val metadata: DigitalSignatureMetadata)","description":"net.corda.v5.application.crypto.DigitalSignatureAndMetadata","location":"application/net.corda.v5.application.crypto/-digital-signature-and-metadata/index.html","searchKeys":["DigitalSignatureAndMetadata","data class DigitalSignatureAndMetadata(val signature: DigitalSignature.WithKey, val metadata: DigitalSignatureMetadata)","net.corda.v5.application.crypto.DigitalSignatureAndMetadata"]},{"name":"data class DigitalSignatureMetadata(val timestamp: Instant, val properties: Map<String, String>)","description":"net.corda.v5.application.crypto.DigitalSignatureMetadata","location":"application/net.corda.v5.application.crypto/-digital-signature-metadata/index.html","searchKeys":["DigitalSignatureMetadata","data class DigitalSignatureMetadata(val timestamp: Instant, val properties: Map<String, String>)","net.corda.v5.application.crypto.DigitalSignatureMetadata"]},{"name":"fun CordaInject()","description":"net.corda.v5.application.flows.CordaInject.CordaInject","location":"application/net.corda.v5.application.flows/-corda-inject/-corda-inject.html","searchKeys":["CordaInject","fun CordaInject()","net.corda.v5.application.flows.CordaInject.CordaInject"]},{"name":"fun CordaPersistenceException(message: String)","description":"net.corda.v5.application.persistence.CordaPersistenceException.CordaPersistenceException","location":"application/net.corda.v5.application.persistence/-corda-persistence-exception/-corda-persistence-exception.html","searchKeys":["CordaPersistenceException","fun CordaPersistenceException(message: String)","net.corda.v5.application.persistence.CordaPersistenceException.CordaPersistenceException"]},{"name":"fun CordaPersistenceException(message: String, cause: Throwable?)","description":"net.corda.v5.application.persistence.CordaPersistenceException.CordaPersistenceException","location":"application/net.corda.v5.application.persistence/-corda-persistence-exception/-corda-persistence-exception.html","searchKeys":["CordaPersistenceException","fun CordaPersistenceException(message: String, cause: Throwable?)","net.corda.v5.application.persistence.CordaPersistenceException.CordaPersistenceException"]},{"name":"fun DigitalSignatureAndMetadata(signature: DigitalSignature.WithKey, metadata: DigitalSignatureMetadata)","description":"net.corda.v5.application.crypto.DigitalSignatureAndMetadata.DigitalSignatureAndMetadata","location":"application/net.corda.v5.application.crypto/-digital-signature-and-metadata/-digital-signature-and-metadata.html","searchKeys":["DigitalSignatureAndMetadata","fun DigitalSignatureAndMetadata(signature: DigitalSignature.WithKey, metadata: DigitalSignatureMetadata)","net.corda.v5.application.crypto.DigitalSignatureAndMetadata.DigitalSignatureAndMetadata"]},{"name":"fun DigitalSignatureMetadata(timestamp: Instant, properties: Map<String, String>)","description":"net.corda.v5.application.crypto.DigitalSignatureMetadata.DigitalSignatureMetadata","location":"application/net.corda.v5.application.crypto/-digital-signature-metadata/-digital-signature-metadata.html","searchKeys":["DigitalSignatureMetadata","fun DigitalSignatureMetadata(timestamp: Instant, properties: Map<String, String>)","net.corda.v5.application.crypto.DigitalSignatureMetadata.DigitalSignatureMetadata"]},{"name":"fun InitiatedBy(protocol: String, version: IntArray = [1])","description":"net.corda.v5.application.flows.InitiatedBy.InitiatedBy","location":"application/net.corda.v5.application.flows/-initiated-by/-initiated-by.html","searchKeys":["InitiatedBy","fun InitiatedBy(protocol: String, version: IntArray = [1])","net.corda.v5.application.flows.InitiatedBy.InitiatedBy"]},{"name":"fun InitiatingFlow(protocol: String, version: IntArray = [1])","description":"net.corda.v5.application.flows.InitiatingFlow.InitiatingFlow","location":"application/net.corda.v5.application.flows/-initiating-flow/-initiating-flow.html","searchKeys":["InitiatingFlow","fun InitiatingFlow(protocol: String, version: IntArray = [1])","net.corda.v5.application.flows.InitiatingFlow.InitiatingFlow"]},{"name":"fun interface FlowContextPropertiesBuilder","description":"net.corda.v5.application.messaging.FlowContextPropertiesBuilder","location":"application/net.corda.v5.application.messaging/-flow-context-properties-builder/index.html","searchKeys":["FlowContextPropertiesBuilder","fun interface FlowContextPropertiesBuilder","net.corda.v5.application.messaging.FlowContextPropertiesBuilder"]},{"name":"inline fun <R : Any> FlowSession.receive(): R","description":"net.corda.v5.application.messaging.receive","location":"application/net.corda.v5.application.messaging/receive.html","searchKeys":["receive","inline fun <R : Any> FlowSession.receive(): R","net.corda.v5.application.messaging.receive"]},{"name":"inline fun <R : Any> FlowSession.sendAndReceive(payload: Any): R","description":"net.corda.v5.application.messaging.sendAndReceive","location":"application/net.corda.v5.application.messaging/send-and-receive.html","searchKeys":["sendAndReceive","inline fun <R : Any> FlowSession.sendAndReceive(payload: Any): R","net.corda.v5.application.messaging.sendAndReceive"]},{"name":"inline fun <T : Any> PersistenceService.find(primaryKey: Any): T?","description":"net.corda.v5.application.persistence.find","location":"application/net.corda.v5.application.persistence/find.html","searchKeys":["find","inline fun <T : Any> PersistenceService.find(primaryKey: Any): T?","net.corda.v5.application.persistence.find"]},{"name":"inline fun <T : Any> PersistenceService.find(primaryKeys: List<Any>): List<T>","description":"net.corda.v5.application.persistence.find","location":"application/net.corda.v5.application.persistence/find.html","searchKeys":["find","inline fun <T : Any> PersistenceService.find(primaryKeys: List<Any>): List<T>","net.corda.v5.application.persistence.find"]},{"name":"inline fun <T : Any> PersistenceService.findAll(): PagedQuery<T>","description":"net.corda.v5.application.persistence.findAll","location":"application/net.corda.v5.application.persistence/find-all.html","searchKeys":["findAll","inline fun <T : Any> PersistenceService.findAll(): PagedQuery<T>","net.corda.v5.application.persistence.findAll"]},{"name":"inline fun <T : Any> SerializationService.deserialize(bytes: ByteArray): T","description":"net.corda.v5.application.serialization.deserialize","location":"application/net.corda.v5.application.serialization/deserialize.html","searchKeys":["deserialize","inline fun <T : Any> SerializationService.deserialize(bytes: ByteArray): T","net.corda.v5.application.serialization.deserialize"]},{"name":"inline fun <T : Any> SerializationService.deserialize(serializedBytes: SerializedBytes<T>): T","description":"net.corda.v5.application.serialization.deserialize","location":"application/net.corda.v5.application.serialization/deserialize.html","searchKeys":["deserialize","inline fun <T : Any> SerializationService.deserialize(serializedBytes: SerializedBytes<T>): T","net.corda.v5.application.serialization.deserialize"]},{"name":"inline fun <T> MarshallingService.parse(input: String): T","description":"net.corda.v5.application.marshalling.parse","location":"application/net.corda.v5.application.marshalling/parse.html","searchKeys":["parse","inline fun <T> MarshallingService.parse(input: String): T","net.corda.v5.application.marshalling.parse"]},{"name":"inline fun <T> MarshallingService.parseList(input: String): List<T>","description":"net.corda.v5.application.marshalling.parseList","location":"application/net.corda.v5.application.marshalling/parse-list.html","searchKeys":["parseList","inline fun <T> MarshallingService.parseList(input: String): List<T>","net.corda.v5.application.marshalling.parseList"]},{"name":"inline fun <T> RPCRequestData.getRequestBodyAs(marshallingService: MarshallingService): T","description":"net.corda.v5.application.flows.getRequestBodyAs","location":"application/net.corda.v5.application.flows/get-request-body-as.html","searchKeys":["getRequestBodyAs","inline fun <T> RPCRequestData.getRequestBodyAs(marshallingService: MarshallingService): T","net.corda.v5.application.flows.getRequestBodyAs"]},{"name":"inline fun <T> RPCRequestData.getRequestBodyAsList(marshallingService: MarshallingService): List<T>","description":"net.corda.v5.application.flows.getRequestBodyAsList","location":"application/net.corda.v5.application.flows/get-request-body-as-list.html","searchKeys":["getRequestBodyAsList","inline fun <T> RPCRequestData.getRequestBodyAsList(marshallingService: MarshallingService): List<T>","net.corda.v5.application.flows.getRequestBodyAsList"]},{"name":"interface DigitalSignatureVerificationService","description":"net.corda.v5.application.crypto.DigitalSignatureVerificationService","location":"application/net.corda.v5.application.crypto/-digital-signature-verification-service/index.html","searchKeys":["DigitalSignatureVerificationService","interface DigitalSignatureVerificationService","net.corda.v5.application.crypto.DigitalSignatureVerificationService"]},{"name":"interface Flow","description":"net.corda.v5.application.flows.Flow","location":"application/net.corda.v5.application.flows/-flow/index.html","searchKeys":["Flow","interface Flow","net.corda.v5.application.flows.Flow"]},{"name":"interface FlowContextProperties","description":"net.corda.v5.application.flows.FlowContextProperties","location":"application/net.corda.v5.application.flows/-flow-context-properties/index.html","searchKeys":["FlowContextProperties","interface FlowContextProperties","net.corda.v5.application.flows.FlowContextProperties"]},{"name":"interface FlowEngine","description":"net.corda.v5.application.flows.FlowEngine","location":"application/net.corda.v5.application.flows/-flow-engine/index.html","searchKeys":["FlowEngine","interface FlowEngine","net.corda.v5.application.flows.FlowEngine"]},{"name":"interface FlowMessaging","description":"net.corda.v5.application.messaging.FlowMessaging","location":"application/net.corda.v5.application.messaging/-flow-messaging/index.html","searchKeys":["FlowMessaging","interface FlowMessaging","net.corda.v5.application.messaging.FlowMessaging"]},{"name":"interface FlowSession","description":"net.corda.v5.application.messaging.FlowSession","location":"application/net.corda.v5.application.messaging/-flow-session/index.html","searchKeys":["FlowSession","interface FlowSession","net.corda.v5.application.messaging.FlowSession"]},{"name":"interface JsonMarshallingService : MarshallingService","description":"net.corda.v5.application.marshalling.JsonMarshallingService","location":"application/net.corda.v5.application.marshalling/-json-marshalling-service/index.html","searchKeys":["JsonMarshallingService","interface JsonMarshallingService : MarshallingService","net.corda.v5.application.marshalling.JsonMarshallingService"]},{"name":"interface MarshallingService","description":"net.corda.v5.application.marshalling.MarshallingService","location":"application/net.corda.v5.application.marshalling/-marshalling-service/index.html","searchKeys":["MarshallingService","interface MarshallingService","net.corda.v5.application.marshalling.MarshallingService"]},{"name":"interface MemberLookup","description":"net.corda.v5.application.membership.MemberLookup","location":"application/net.corda.v5.application.membership/-member-lookup/index.html","searchKeys":["MemberLookup","interface MemberLookup","net.corda.v5.application.membership.MemberLookup"]},{"name":"interface PagedQuery<R>","description":"net.corda.v5.application.persistence.PagedQuery","location":"application/net.corda.v5.application.persistence/-paged-query/index.html","searchKeys":["PagedQuery","interface PagedQuery<R>","net.corda.v5.application.persistence.PagedQuery"]},{"name":"interface ParameterisedQuery<R> : PagedQuery<R> ","description":"net.corda.v5.application.persistence.ParameterisedQuery","location":"application/net.corda.v5.application.persistence/-parameterised-query/index.html","searchKeys":["ParameterisedQuery","interface ParameterisedQuery<R> : PagedQuery<R> ","net.corda.v5.application.persistence.ParameterisedQuery"]},{"name":"interface PersistenceService","description":"net.corda.v5.application.persistence.PersistenceService","location":"application/net.corda.v5.application.persistence/-persistence-service/index.html","searchKeys":["PersistenceService","interface PersistenceService","net.corda.v5.application.persistence.PersistenceService"]},{"name":"interface RPCRequestData","description":"net.corda.v5.application.flows.RPCRequestData","location":"application/net.corda.v5.application.flows/-r-p-c-request-data/index.html","searchKeys":["RPCRequestData","interface RPCRequestData","net.corda.v5.application.flows.RPCRequestData"]},{"name":"interface RPCStartableFlow : Flow","description":"net.corda.v5.application.flows.RPCStartableFlow","location":"application/net.corda.v5.application.flows/-r-p-c-startable-flow/index.html","searchKeys":["RPCStartableFlow","interface RPCStartableFlow : Flow","net.corda.v5.application.flows.RPCStartableFlow"]},{"name":"interface ResponderFlow : Flow","description":"net.corda.v5.application.flows.ResponderFlow","location":"application/net.corda.v5.application.flows/-responder-flow/index.html","searchKeys":["ResponderFlow","interface ResponderFlow : Flow","net.corda.v5.application.flows.ResponderFlow"]},{"name":"interface SerializationService","description":"net.corda.v5.application.serialization.SerializationService","location":"application/net.corda.v5.application.serialization/-serialization-service/index.html","searchKeys":["SerializationService","interface SerializationService","net.corda.v5.application.serialization.SerializationService"]},{"name":"interface SigningService","description":"net.corda.v5.application.crypto.SigningService","location":"application/net.corda.v5.application.crypto/-signing-service/index.html","searchKeys":["SigningService","interface SigningService","net.corda.v5.application.crypto.SigningService"]},{"name":"interface SubFlow<out T> : Flow","description":"net.corda.v5.application.flows.SubFlow","location":"application/net.corda.v5.application.flows/-sub-flow/index.html","searchKeys":["SubFlow","interface SubFlow<out T> : Flow","net.corda.v5.application.flows.SubFlow"]},{"name":"interface UniquenessCheckError","description":"net.corda.v5.application.uniqueness.model.UniquenessCheckError","location":"application/net.corda.v5.application.uniqueness.model/-uniqueness-check-error/index.html","searchKeys":["UniquenessCheckError","interface UniquenessCheckError","net.corda.v5.application.uniqueness.model.UniquenessCheckError"]},{"name":"interface UniquenessCheckErrorGeneral : UniquenessCheckError","description":"net.corda.v5.application.uniqueness.model.UniquenessCheckErrorGeneral","location":"application/net.corda.v5.application.uniqueness.model/-uniqueness-check-error-general/index.html","searchKeys":["UniquenessCheckErrorGeneral","interface UniquenessCheckErrorGeneral : UniquenessCheckError","net.corda.v5.application.uniqueness.model.UniquenessCheckErrorGeneral"]},{"name":"interface UniquenessCheckErrorInputStateConflict : UniquenessCheckError","description":"net.corda.v5.application.uniqueness.model.UniquenessCheckErrorInputStateConflict","location":"application/net.corda.v5.application.uniqueness.model/-uniqueness-check-error-input-state-conflict/index.html","searchKeys":["UniquenessCheckErrorInputStateConflict","interface UniquenessCheckErrorInputStateConflict : UniquenessCheckError","net.corda.v5.application.uniqueness.model.UniquenessCheckErrorInputStateConflict"]},{"name":"interface UniquenessCheckErrorInputStateUnknown : UniquenessCheckError","description":"net.corda.v5.application.uniqueness.model.UniquenessCheckErrorInputStateUnknown","location":"application/net.corda.v5.application.uniqueness.model/-uniqueness-check-error-input-state-unknown/index.html","searchKeys":["UniquenessCheckErrorInputStateUnknown","interface UniquenessCheckErrorInputStateUnknown : UniquenessCheckError","net.corda.v5.application.uniqueness.model.UniquenessCheckErrorInputStateUnknown"]},{"name":"interface UniquenessCheckErrorReferenceStateConflict : UniquenessCheckError","description":"net.corda.v5.application.uniqueness.model.UniquenessCheckErrorReferenceStateConflict","location":"application/net.corda.v5.application.uniqueness.model/-uniqueness-check-error-reference-state-conflict/index.html","searchKeys":["UniquenessCheckErrorReferenceStateConflict","interface UniquenessCheckErrorReferenceStateConflict : UniquenessCheckError","net.corda.v5.application.uniqueness.model.UniquenessCheckErrorReferenceStateConflict"]},{"name":"interface UniquenessCheckErrorReferenceStateUnknown : UniquenessCheckError","description":"net.corda.v5.application.uniqueness.model.UniquenessCheckErrorReferenceStateUnknown","location":"application/net.corda.v5.application.uniqueness.model/-uniqueness-check-error-reference-state-unknown/index.html","searchKeys":["UniquenessCheckErrorReferenceStateUnknown","interface UniquenessCheckErrorReferenceStateUnknown : UniquenessCheckError","net.corda.v5.application.uniqueness.model.UniquenessCheckErrorReferenceStateUnknown"]},{"name":"interface UniquenessCheckErrorTimeWindowOutOfBounds : UniquenessCheckError","description":"net.corda.v5.application.uniqueness.model.UniquenessCheckErrorTimeWindowOutOfBounds","location":"application/net.corda.v5.application.uniqueness.model/-uniqueness-check-error-time-window-out-of-bounds/index.html","searchKeys":["UniquenessCheckErrorTimeWindowOutOfBounds","interface UniquenessCheckErrorTimeWindowOutOfBounds : UniquenessCheckError","net.corda.v5.application.uniqueness.model.UniquenessCheckErrorTimeWindowOutOfBounds"]},{"name":"interface UniquenessCheckResponse","description":"net.corda.v5.application.uniqueness.model.UniquenessCheckResponse","location":"application/net.corda.v5.application.uniqueness.model/-uniqueness-check-response/index.html","searchKeys":["UniquenessCheckResponse","interface UniquenessCheckResponse","net.corda.v5.application.uniqueness.model.UniquenessCheckResponse"]},{"name":"interface UniquenessCheckResult","description":"net.corda.v5.application.uniqueness.model.UniquenessCheckResult","location":"application/net.corda.v5.application.uniqueness.model/-uniqueness-check-result/index.html","searchKeys":["UniquenessCheckResult","interface UniquenessCheckResult","net.corda.v5.application.uniqueness.model.UniquenessCheckResult"]},{"name":"interface UniquenessCheckResultFailure : UniquenessCheckResult","description":"net.corda.v5.application.uniqueness.model.UniquenessCheckResultFailure","location":"application/net.corda.v5.application.uniqueness.model/-uniqueness-check-result-failure/index.html","searchKeys":["UniquenessCheckResultFailure","interface UniquenessCheckResultFailure : UniquenessCheckResult","net.corda.v5.application.uniqueness.model.UniquenessCheckResultFailure"]},{"name":"interface UniquenessCheckResultSuccess : UniquenessCheckResult","description":"net.corda.v5.application.uniqueness.model.UniquenessCheckResultSuccess","location":"application/net.corda.v5.application.uniqueness.model/-uniqueness-check-result-success/index.html","searchKeys":["UniquenessCheckResultSuccess","interface UniquenessCheckResultSuccess : UniquenessCheckResult","net.corda.v5.application.uniqueness.model.UniquenessCheckResultSuccess"]},{"name":"interface UniquenessCheckStateDetails","description":"net.corda.v5.application.uniqueness.model.UniquenessCheckStateDetails","location":"application/net.corda.v5.application.uniqueness.model/-uniqueness-check-state-details/index.html","searchKeys":["UniquenessCheckStateDetails","interface UniquenessCheckStateDetails","net.corda.v5.application.uniqueness.model.UniquenessCheckStateDetails"]},{"name":"interface UniquenessCheckStateRef","description":"net.corda.v5.application.uniqueness.model.UniquenessCheckStateRef","location":"application/net.corda.v5.application.uniqueness.model/-uniqueness-check-state-ref/index.html","searchKeys":["UniquenessCheckStateRef","interface UniquenessCheckStateRef","net.corda.v5.application.uniqueness.model.UniquenessCheckStateRef"]},{"name":"object Companion","description":"net.corda.v5.application.flows.FlowContextProperties.Companion","location":"application/net.corda.v5.application.flows/-flow-context-properties/-companion/index.html","searchKeys":["Companion","object Companion","net.corda.v5.application.flows.FlowContextProperties.Companion"]},{"name":"operator fun FlowContextProperties.set(key: String, value: String)","description":"net.corda.v5.application.flows.set","location":"application/net.corda.v5.application.flows/set.html","searchKeys":["set","operator fun FlowContextProperties.set(key: String, value: String)","net.corda.v5.application.flows.set"]},{"name":"val CORDA_RESERVED_PREFIX: String","description":"net.corda.v5.application.flows.FlowContextProperties.Companion.CORDA_RESERVED_PREFIX","location":"application/net.corda.v5.application.flows/-flow-context-properties/-companion/-c-o-r-d-a_-r-e-s-e-r-v-e-d_-p-r-e-f-i-x.html","searchKeys":["CORDA_RESERVED_PREFIX","val CORDA_RESERVED_PREFIX: String","net.corda.v5.application.flows.FlowContextProperties.Companion.CORDA_RESERVED_PREFIX"]},{"name":"val by: PublicKey","description":"net.corda.v5.application.crypto.DigitalSignatureAndMetadata.by","location":"application/net.corda.v5.application.crypto/-digital-signature-and-metadata/by.html","searchKeys":["by","val by: PublicKey","net.corda.v5.application.crypto.DigitalSignatureAndMetadata.by"]},{"name":"val metadata: DigitalSignatureMetadata","description":"net.corda.v5.application.crypto.DigitalSignatureAndMetadata.metadata","location":"application/net.corda.v5.application.crypto/-digital-signature-and-metadata/metadata.html","searchKeys":["metadata","val metadata: DigitalSignatureMetadata","net.corda.v5.application.crypto.DigitalSignatureAndMetadata.metadata"]},{"name":"val properties: Map<String, String>","description":"net.corda.v5.application.crypto.DigitalSignatureMetadata.properties","location":"application/net.corda.v5.application.crypto/-digital-signature-metadata/properties.html","searchKeys":["properties","val properties: Map<String, String>","net.corda.v5.application.crypto.DigitalSignatureMetadata.properties"]},{"name":"val protocol: String","description":"net.corda.v5.application.flows.InitiatedBy.protocol","location":"application/net.corda.v5.application.flows/-initiated-by/protocol.html","searchKeys":["protocol","val protocol: String","net.corda.v5.application.flows.InitiatedBy.protocol"]},{"name":"val protocol: String","description":"net.corda.v5.application.flows.InitiatingFlow.protocol","location":"application/net.corda.v5.application.flows/-initiating-flow/protocol.html","searchKeys":["protocol","val protocol: String","net.corda.v5.application.flows.InitiatingFlow.protocol"]},{"name":"val signature: DigitalSignature.WithKey","description":"net.corda.v5.application.crypto.DigitalSignatureAndMetadata.signature","location":"application/net.corda.v5.application.crypto/-digital-signature-and-metadata/signature.html","searchKeys":["signature","val signature: DigitalSignature.WithKey","net.corda.v5.application.crypto.DigitalSignatureAndMetadata.signature"]},{"name":"val timestamp: Instant","description":"net.corda.v5.application.crypto.DigitalSignatureMetadata.timestamp","location":"application/net.corda.v5.application.crypto/-digital-signature-metadata/timestamp.html","searchKeys":["timestamp","val timestamp: Instant","net.corda.v5.application.crypto.DigitalSignatureMetadata.timestamp"]},{"name":"val version: IntArray","description":"net.corda.v5.application.flows.InitiatedBy.version","location":"application/net.corda.v5.application.flows/-initiated-by/version.html","searchKeys":["version","val version: IntArray","net.corda.v5.application.flows.InitiatedBy.version"]},{"name":"val version: IntArray","description":"net.corda.v5.application.flows.InitiatingFlow.version","location":"application/net.corda.v5.application.flows/-initiating-flow/version.html","searchKeys":["version","val version: IntArray","net.corda.v5.application.flows.InitiatingFlow.version"]}]
